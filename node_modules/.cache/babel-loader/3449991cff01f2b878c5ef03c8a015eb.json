{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/victorpc/\\xC1rea de trabalho/ProjetoEmbarcados/src/auth/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, CssBaseline, Typography, FormControlLabel, Button, Checkbox, Grid, Link, makeStyles, Card, CardContent } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport fire from '../helpers/fbConfig';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ScaleLoader } from 'react-spinners';\nimport Logo from '../asserts/ban-i2.png';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    background: '#9999ff',\n    margin: theme.spacing(3, 0, 2),\n    color: '#fff'\n  },\n  card: {\n    marginTop: '60px',\n    paddingLeft: '20px',\n    paddingRight: '20px',\n    paddingBottom: '20px'\n  },\n  pointer: {\n    cursor: 'pointer',\n    color: 'red'\n  }\n}));\n\nconst Login = props => {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberme, setRememberMe] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const override = `\n        display: flex;\n        margin-left: 100px;\n        border-color: orange;\n    `;\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleCheck = event => {\n    setRememberMe(event.target.checked);\n  };\n\n  const handlerLogin = () => {\n    setLoading(true);\n    fire.auth().signInWithEmailAndPassword(email, password).then(response => {\n      const {\n        user\n      } = response;\n      const data = {\n        userId: user.uid,\n        email: user.email\n      };\n      localStorage.setItem('user', JSON.stringify(data));\n      const storage = localStorage.getItem('user');\n      const loggedInUser = storage !== null ? JSON.parse(storage) : null;\n      props.loggedIn(loggedInUser);\n      setLoading(false);\n    }).catch(error => {\n      toast.error(error.message);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            onSubmit: handlerLogin,\n            onError: errors => {\n              for (const err of errors) {\n                console.log(err.props.errorMessages[0]);\n              }\n            },\n            className: classes.form,\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              fullWidth: true,\n              label: \"Email\",\n              onChange: handleEmail,\n              name: \"email\",\n              value: email,\n              validators: ['required', 'isEmail'],\n              errorMessages: ['Campo Obrigatorio', 'Email Invalido'],\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Password\",\n              onChange: handlePassword,\n              name: \"password\",\n              type: \"password\",\n              value: password,\n              validators: ['required'],\n              errorMessages: ['Campo Obrigatorio'],\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: rememberme,\n                onChange: e => handleCheck(e),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 42\n              }, this),\n              label: \"Lembrar-me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), loading ? /*#__PURE__*/_jsxDEV(ScaleLoader, {\n              css: override,\n              size: 150,\n              color: \"#eb4034\",\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              className: classes.submit,\n              children: \"Entrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Msz6ojgN8peiOJ4ZAVrC5gR53xY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/victorpc/√Årea de trabalho/ProjetoEmbarcados/src/auth/Login.jsx"],"names":["React","useState","Container","CssBaseline","Typography","FormControlLabel","Button","Checkbox","Grid","Link","makeStyles","Card","CardContent","ValidatorForm","TextValidator","fire","ToastContainer","toast","ScaleLoader","Logo","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","background","margin","color","card","paddingLeft","paddingRight","paddingBottom","pointer","cursor","Login","props","classes","email","setEmail","password","setPassword","rememberme","setRememberMe","loading","setLoading","override","handleEmail","event","target","value","handlePassword","handleCheck","checked","handlerLogin","auth","signInWithEmailAndPassword","then","response","user","data","userId","uid","localStorage","setItem","JSON","stringify","storage","getItem","loggedInUser","parse","loggedIn","catch","error","message","errors","err","console","log","errorMessages","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, CssBaseline, Typography, FormControlLabel, Button, Checkbox, Grid, Link, makeStyles, Card, CardContent\n} from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport fire from '../helpers/fbConfig';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ScaleLoader } from 'react-spinners';\nimport Logo from '../asserts/ban-i2.png';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        background: '#9999ff',\n        margin: theme.spacing(3, 0, 2),\n        color: '#fff'\n    },\n    card: {\n        marginTop: '60px',\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingBottom: '20px',\n    },\n    pointer: {\n        cursor: 'pointer',\n        color: 'red'\n    }\n}));\n\nconst Login = (props) => {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberme, setRememberMe] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const override = `\n        display: flex;\n        margin-left: 100px;\n        border-color: orange;\n    `;\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n    }\n    const handleCheck = (event) => {\n        setRememberMe(event.target.checked);\n    }\n    const handlerLogin = () => {\n        setLoading(true);\n        fire.auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(response => {\n                const { user } = response;\n                const data = {\n                    userId: user.uid,\n                    email: user.email\n                }\n                localStorage.setItem('user', JSON.stringify(data));\n                const storage = localStorage.getItem('user');\n                const loggedInUser = storage !== null ? JSON.parse(storage) : null;\n                props.loggedIn(loggedInUser);\n                setLoading(false);\n            }).catch(error => {\n                toast.error(error.message);\n                setLoading(false);\n            });\n\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Card className={classes.card}>\n                <CardContent>\n                    <ToastContainer />\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <img src={Logo} />\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Login\n                        </Typography>\n                        <ValidatorForm\n                            onSubmit={handlerLogin}\n                            onError={errors => {\n                                for (const err of errors) {\n                                    console.log(err.props.errorMessages[0])\n                                }\n                            }}\n                            className={classes.form}>\n                            <TextValidator\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                label=\"Email\"\n                                onChange={handleEmail}\n                                name=\"email\"\n                                value={email}\n                                validators={['required', 'isEmail']}\n                                errorMessages={['Campo Obrigatorio', 'Email Invalido']}\n                                autoComplete='off' />\n                            <TextValidator\n                                variant=\"outlined\"\n                                fullWidth\n                                label=\"Password\"\n                                onChange={handlePassword}\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                validators={['required']}\n                                errorMessages={['Campo Obrigatorio']}\n                                autoComplete=\"off\"\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value={rememberme} onChange={(e) => handleCheck(e)} color=\"primary\" />}\n                                label=\"Lembrar-me\"\n                            />\n                            {loading ? (\n                                <ScaleLoader\n                                    css={override}\n                                    size={150}\n                                    color={\"#eb4034\"}\n                                    loading={loading} />\n                            ) : (\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    className={classes.submit}\n                                >\n                                    Entrar\n                                </Button>\n                            )}\n\n                        </ValidatorForm>\n                    </div>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}