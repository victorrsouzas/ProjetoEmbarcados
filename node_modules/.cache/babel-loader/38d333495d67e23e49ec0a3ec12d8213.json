{"ast":null,"code":"import promiseFinally from './finally'; // Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\n\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {} // Polyfill for Function.prototype.bind\n\n\nfunction bind(fn, thisArg) {\n  return function () {\n    fn.apply(thisArg, arguments);\n  };\n}\n/**\r\n * @constructor\r\n * @param {Function} fn\r\n */\n\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n\n  this._state = 0;\n  /** @type {!boolean} */\n\n  this._handled = false;\n  /** @type {Promise|undefined} */\n\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n\n  this._deferreds = [];\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n\n    return;\n  }\n\n  self._handled = true;\n\n  Promise._immediateFn(function () {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n\n    var ret;\n\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\n    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n      var then = newValue.then;\n\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function () {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n\n  self._deferreds = null;\n}\n/**\r\n * @constructor\r\n */\n\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n/**\r\n * Take a potentially misbehaving resolver function and make sure\r\n * onFulfilled and onRejected are only called once.\r\n *\r\n * Makes no guarantees about asynchrony.\r\n */\n\n\nfunction doResolve(fn, self) {\n  var done = false;\n\n  try {\n    fn(function (value) {\n      if (done) return;\n      done = true;\n      resolve(self, value);\n    }, function (reason) {\n      if (done) return;\n      done = true;\n      reject(self, reason);\n    });\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = promiseFinally;\n\nPromise.all = function (arr) {\n  return new Promise(function (resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n\n          if (typeof then === 'function') {\n            then.call(val, function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n\n        args[i] = val;\n\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function (value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function (resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n}; // Use polyfill for setImmediate for performance gains\n\n\nPromise._immediateFn = typeof setImmediate === 'function' && function (fn) {\n  setImmediate(fn);\n} || function (fn) {\n  setTimeoutFunc(fn, 0);\n};\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;","map":{"version":3,"sources":["C:/Users/victo/Desktop/ProjetoEmbarcados/node_modules/react-form-validator-core/node_modules/promise-polyfill/src/index.js"],"names":["promiseFinally","setTimeoutFunc","setTimeout","noop","bind","fn","thisArg","apply","arguments","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","push","_immediateFn","cb","onFulfilled","onRejected","resolve","reject","promise","ret","e","newValue","then","finale","length","_unhandledRejectionFn","i","len","Handler","done","value","reason","ex","prototype","prom","constructor","all","arr","args","Array","slice","call","remaining","res","val","race","values","setImmediate","err","console","warn"],"mappings":"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","sourcesContent":["import promiseFinally from './finally';\r\n\r\n// Store setTimeout reference so promise-polyfill will be unaffected by\r\n// other code modifying setTimeout (like sinon.useFakeTimers())\r\nvar setTimeoutFunc = setTimeout;\r\n\r\nfunction noop() {}\r\n\r\n// Polyfill for Function.prototype.bind\r\nfunction bind(fn, thisArg) {\r\n  return function() {\r\n    fn.apply(thisArg, arguments);\r\n  };\r\n}\r\n\r\n/**\r\n * @constructor\r\n * @param {Function} fn\r\n */\r\nfunction Promise(fn) {\r\n  if (!(this instanceof Promise))\r\n    throw new TypeError('Promises must be constructed via new');\r\n  if (typeof fn !== 'function') throw new TypeError('not a function');\r\n  /** @type {!number} */\r\n  this._state = 0;\r\n  /** @type {!boolean} */\r\n  this._handled = false;\r\n  /** @type {Promise|undefined} */\r\n  this._value = undefined;\r\n  /** @type {!Array<!Function>} */\r\n  this._deferreds = [];\r\n\r\n  doResolve(fn, this);\r\n}\r\n\r\nfunction handle(self, deferred) {\r\n  while (self._state === 3) {\r\n    self = self._value;\r\n  }\r\n  if (self._state === 0) {\r\n    self._deferreds.push(deferred);\r\n    return;\r\n  }\r\n  self._handled = true;\r\n  Promise._immediateFn(function() {\r\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n    if (cb === null) {\r\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\r\n      return;\r\n    }\r\n    var ret;\r\n    try {\r\n      ret = cb(self._value);\r\n    } catch (e) {\r\n      reject(deferred.promise, e);\r\n      return;\r\n    }\r\n    resolve(deferred.promise, ret);\r\n  });\r\n}\r\n\r\nfunction resolve(self, newValue) {\r\n  try {\r\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n    if (newValue === self)\r\n      throw new TypeError('A promise cannot be resolved with itself.');\r\n    if (\r\n      newValue &&\r\n      (typeof newValue === 'object' || typeof newValue === 'function')\r\n    ) {\r\n      var then = newValue.then;\r\n      if (newValue instanceof Promise) {\r\n        self._state = 3;\r\n        self._value = newValue;\r\n        finale(self);\r\n        return;\r\n      } else if (typeof then === 'function') {\r\n        doResolve(bind(then, newValue), self);\r\n        return;\r\n      }\r\n    }\r\n    self._state = 1;\r\n    self._value = newValue;\r\n    finale(self);\r\n  } catch (e) {\r\n    reject(self, e);\r\n  }\r\n}\r\n\r\nfunction reject(self, newValue) {\r\n  self._state = 2;\r\n  self._value = newValue;\r\n  finale(self);\r\n}\r\n\r\nfunction finale(self) {\r\n  if (self._state === 2 && self._deferreds.length === 0) {\r\n    Promise._immediateFn(function() {\r\n      if (!self._handled) {\r\n        Promise._unhandledRejectionFn(self._value);\r\n      }\r\n    });\r\n  }\r\n\r\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\r\n    handle(self, self._deferreds[i]);\r\n  }\r\n  self._deferreds = null;\r\n}\r\n\r\n/**\r\n * @constructor\r\n */\r\nfunction Handler(onFulfilled, onRejected, promise) {\r\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n  this.promise = promise;\r\n}\r\n\r\n/**\r\n * Take a potentially misbehaving resolver function and make sure\r\n * onFulfilled and onRejected are only called once.\r\n *\r\n * Makes no guarantees about asynchrony.\r\n */\r\nfunction doResolve(fn, self) {\r\n  var done = false;\r\n  try {\r\n    fn(\r\n      function(value) {\r\n        if (done) return;\r\n        done = true;\r\n        resolve(self, value);\r\n      },\r\n      function(reason) {\r\n        if (done) return;\r\n        done = true;\r\n        reject(self, reason);\r\n      }\r\n    );\r\n  } catch (ex) {\r\n    if (done) return;\r\n    done = true;\r\n    reject(self, ex);\r\n  }\r\n}\r\n\r\nPromise.prototype['catch'] = function(onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\n\r\nPromise.prototype.then = function(onFulfilled, onRejected) {\r\n  // @ts-ignore\r\n  var prom = new this.constructor(noop);\r\n\r\n  handle(this, new Handler(onFulfilled, onRejected, prom));\r\n  return prom;\r\n};\r\n\r\nPromise.prototype['finally'] = promiseFinally;\r\n\r\nPromise.all = function(arr) {\r\n  return new Promise(function(resolve, reject) {\r\n    if (!arr || typeof arr.length === 'undefined')\r\n      throw new TypeError('Promise.all accepts an array');\r\n    var args = Array.prototype.slice.call(arr);\r\n    if (args.length === 0) return resolve([]);\r\n    var remaining = args.length;\r\n\r\n    function res(i, val) {\r\n      try {\r\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n          var then = val.then;\r\n          if (typeof then === 'function') {\r\n            then.call(\r\n              val,\r\n              function(val) {\r\n                res(i, val);\r\n              },\r\n              reject\r\n            );\r\n            return;\r\n          }\r\n        }\r\n        args[i] = val;\r\n        if (--remaining === 0) {\r\n          resolve(args);\r\n        }\r\n      } catch (ex) {\r\n        reject(ex);\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < args.length; i++) {\r\n      res(i, args[i]);\r\n    }\r\n  });\r\n};\r\n\r\nPromise.resolve = function(value) {\r\n  if (value && typeof value === 'object' && value.constructor === Promise) {\r\n    return value;\r\n  }\r\n\r\n  return new Promise(function(resolve) {\r\n    resolve(value);\r\n  });\r\n};\r\n\r\nPromise.reject = function(value) {\r\n  return new Promise(function(resolve, reject) {\r\n    reject(value);\r\n  });\r\n};\r\n\r\nPromise.race = function(values) {\r\n  return new Promise(function(resolve, reject) {\r\n    for (var i = 0, len = values.length; i < len; i++) {\r\n      values[i].then(resolve, reject);\r\n    }\r\n  });\r\n};\r\n\r\n// Use polyfill for setImmediate for performance gains\r\nPromise._immediateFn =\r\n  (typeof setImmediate === 'function' &&\r\n    function(fn) {\r\n      setImmediate(fn);\r\n    }) ||\r\n  function(fn) {\r\n    setTimeoutFunc(fn, 0);\r\n  };\r\n\r\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\r\n  if (typeof console !== 'undefined' && console) {\r\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nexport default Promise;\r\n"]},"metadata":{},"sourceType":"module"}