{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/victorpc/\\xC1rea de trabalho/Desafio-HandTalk/src/pages/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableCell, TableRow, TableHead, TableContainer, Paper, makeStyles, Container, Typography, Button, Grid, IconButton } from '@material-ui/core';\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\nimport { ScaleLoader } from 'react-spinners';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getCustomers, addCustomer, getCustomer, updateCustomer, deleteCustomer } from '../component/index';\nimport CustomerDialog from '../component/indexDialog';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    marginTop: '40px'\n  },\n  title: {\n    flex: '1 1 100%',\n    padding: '20px'\n  },\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  button: {\n    margin: theme.spacing(1),\n    float: 'right'\n  }\n}));\n\nconst Customer = () => {\n  _s();\n\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [formMode, setFormMode] = useState(true);\n  const [custId, setCustId] = useState('');\n  const [firstname, setFirstName] = useState('');\n  const [lastname, setLastName] = useState('');\n  const [phonenumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const override = `\n        display: flex;\n        align-items: center;\n        justify-content: center;    \n        border-color: orange;\n    `;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFirstName = event => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastName = event => {\n    setLastName(event.target.value);\n  };\n\n  const handlePhoneNumber = event => {\n    setPhoneNumber(event.target.value);\n  };\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const getlist = async () => {\n    try {\n      setLoading(true);\n      const list = await getCustomers();\n      setCustomers(list);\n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const getOneCustomer = async id => {\n    try {\n      setFormMode(false);\n      setCustId(id);\n      const response = await getCustomer(id);\n      setFirstName(response.firstname);\n      setLastName(response.lastname);\n      setPhoneNumber(response.phonenumber);\n      setEmail(response.email);\n      setOpen(true);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      await deleteCustomer(id);\n      getlist();\n      toast.success('Usuario deletado com sucesso');\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const handleAdd = () => {\n    setOpen(true);\n    setFormMode(true);\n    setFirstName('');\n    setLastName('');\n    setPhoneNumber('');\n    setEmail('');\n  };\n\n  const addCustomerHandler = async () => {\n    try {\n      const customer = {\n        firstname,\n        lastname,\n        phonenumber,\n        email\n      };\n\n      if (formMode) {\n        await addCustomer(customer);\n        toast.success('Usuario Adicionado com Sucesso');\n        getlist();\n        setOpen(false);\n        setFirstName('');\n        setLastName('');\n        setPhoneNumber('');\n        setEmail('');\n      } else {\n        await updateCustomer(custId, customer);\n        toast.success('Usuario Atualizado Sucesso');\n        getlist();\n        setOpen(false);\n        setFirstName('');\n        setLastName('');\n        setPhoneNumber('');\n        setEmail('');\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getlist();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            variant: \"h6\",\n            component: \"div\",\n            children: \"Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAdd,\n            className: classes.button,\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.head,\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.head,\n              children: \"Telefone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.head,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.head,\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: customers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 7,\n              children: /*#__PURE__*/_jsxDEV(ScaleLoader, {\n                css: override,\n                size: 150,\n                color: \"#eb4034\",\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: customers.map(cust => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [cust.firstname, \" \", cust.lastname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: cust.phonenumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: cust.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => getOneCustomer(cust.id),\n                  color: \"primary\",\n                  \"aria-label\": \"update customer\",\n                  children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => deleteHandler(cust.id),\n                  color: \"secondary\",\n                  \"aria-label\": \"delete customer\",\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 35\n              }, this)]\n            }, cust.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this))\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerDialog, {\n      open: open,\n      close: handleClose,\n      formmode: formMode,\n      firstname: firstname,\n      lastname: lastname,\n      phonenumber: phonenumber,\n      email: email,\n      changeFirstname: handleFirstName,\n      changeLastname: handleLastName,\n      changephonenumber: handlePhoneNumber,\n      changeEmail: handleEmail,\n      addCustomer: addCustomerHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Customer, \"uq7ELDCvJTxVbVGWC/7LQMPKie0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Customer;\nexport default Customer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"sources":["/home/victorpc/Área de trabalho/Desafio-HandTalk/src/pages/index.jsx"],"names":["React","useEffect","useState","Table","TableBody","TableCell","TableRow","TableHead","TableContainer","Paper","makeStyles","Container","Typography","Button","Grid","IconButton","AddCircle","Edit","Delete","ScaleLoader","ToastContainer","toast","getCustomers","addCustomer","getCustomer","updateCustomer","deleteCustomer","CustomerDialog","useStyles","theme","table","minWidth","container","marginTop","title","flex","padding","head","backgroundColor","palette","common","black","color","white","button","margin","spacing","float","Customer","classes","customers","setCustomers","loading","setLoading","open","setOpen","formMode","setFormMode","custId","setCustId","firstname","setFirstName","lastname","setLastName","phonenumber","setPhoneNumber","email","setEmail","override","handleClose","handleFirstName","event","target","value","handleLastName","handlePhoneNumber","handleEmail","getlist","list","error","message","getOneCustomer","id","response","deleteHandler","success","handleAdd","addCustomerHandler","customer","length","map","cust"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Table, TableBody, TableCell, TableRow, TableHead,TableContainer, Paper, makeStyles, Container,\n    Typography, Button, Grid, IconButton} from '@material-ui/core';\nimport {AddCircle, Edit, Delete} from '@material-ui/icons';\nimport {ScaleLoader} from 'react-spinners';\nimport {ToastContainer, toast} from 'react-toastify';\nimport {getCustomers, addCustomer, getCustomer, updateCustomer, deleteCustomer} from '../component/index';\nimport CustomerDialog from '../component/indexDialog';\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    container: {\n        marginTop: '40px'\n    }, \n    title: {\n        flex: '1 1 100%',\n        padding: '20px'\n    },\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    button: {\n        margin: theme.spacing(1),\n        float: 'right',\n    },\n}));\n\n\nconst Customer = () => {\n    const classes  = useStyles();\n    const [customers, setCustomers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [formMode, setFormMode] = useState(true);\n    const [custId, setCustId] = useState('');\n    const [firstname, setFirstName] = useState('');\n    const [lastname, setLastName] = useState('');\n    const [phonenumber, setPhoneNumber] =  useState('');\n    const [email, setEmail] = useState('');\n    const override =`\n        display: flex;\n        align-items: center;\n        justify-content: center;    \n        border-color: orange;\n    `;\n    const handleClose = () => {\n        setOpen(false);\n    }\n    const handleFirstName = (event) => {\n        setFirstName(event.target.value);\n    }\n    const handleLastName = (event) => {\n        setLastName(event.target.value);\n    }\n    const handlePhoneNumber = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n    const getlist = async () => { \n        try {\n            setLoading(true);\n            const list = await getCustomers();\n            setCustomers(list);\n            setLoading(false);\n        } catch (error) {\n            toast.error(error.message);\n            setLoading(false);\n        }\n    }\n    const getOneCustomer = async (id) => {\n            try {\n                setFormMode(false);\n                setCustId(id);\n                const response = await getCustomer(id);\n                 setFirstName(response.firstname);\n                 setLastName(response.lastname);\n                 setPhoneNumber(response.phonenumber);\n                 setEmail(response.email);\n                 setOpen(true);\n            } catch (error) {\n                toast.error(error.message);\n            }\n\n    }\n    const deleteHandler = async (id) => {\n            try {\n                await deleteCustomer(id);\n                getlist();\n                toast.success('Usuario deletado com sucesso');\n            } catch (error) {\n                toast.error(error.message);\n            }\n    }\n    const handleAdd = () => {\n            setOpen(true);\n            setFormMode(true);\n            setFirstName('');\n            setLastName('');\n            setPhoneNumber('');\n            setEmail(''); \n    }\n\n    const addCustomerHandler = async () => {\n            try {\n                 const customer = {\n                     firstname,\n                     lastname,\n                     phonenumber,\n                     email,\n                 }\n                if (formMode) {\n                    await addCustomer(customer);\n                    toast.success('Usuario Adicionado com Sucesso');\n                    getlist();\n                    setOpen(false);\n                    setFirstName('');\n                    setLastName('');\n                    setPhoneNumber('');\n                    setEmail('');\n                }else {\n                    await updateCustomer(custId, customer);\n                    toast.success('Usuario Atualizado Sucesso');\n                    getlist();\n                    setOpen(false);\n                    setFirstName('');\n                    setLastName('');\n                    setPhoneNumber('');\n                    setEmail(''); \n                }\n            } catch (error) {\n                toast.error(error.message);\n            }\n    }\n\n    useEffect(() => {\n        getlist();\n    }, []);\n    return (\n        <Container className={classes.container}>\n            <ToastContainer/>\n            <TableContainer component={Paper}>\n                <Grid container>\n                    <Grid item xs={8}>\n                    <Typography className={classes.title} variant=\"h6\" component=\"div\">\n                        Agenda\n                    </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleAdd}\n                        className={classes.button}\n                        startIcon={<AddCircle/>}\n                    />\n                    </Grid>\n                </Grid>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.head}>Nome</TableCell>\n                            <TableCell className={classes.head}>Telefone</TableCell>\n                            <TableCell className={classes.head}>Email</TableCell>\n                            <TableCell className={classes.head}>Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {customers.length === 0 ? (\n                            <TableRow>\n                                <TableCell colSpan={7}>\n                                    <ScaleLoader \n                                     css={override}\n                                    size={150}\n                                    color={\"#eb4034\"}\n                                    loading={loading}/>\n                                </TableCell>\n                            </TableRow>\n                        ) : (\n                            <>\n                            {customers.map((cust) => (\n                                <TableRow key={cust.id}>\n                                  <TableCell>{cust.firstname} {cust.lastname}</TableCell>\n                                  <TableCell>{cust.phonenumber}</TableCell>\n                                  <TableCell>{cust.email}</TableCell>\n                                  <TableCell>\n                                    <IconButton onClick={() => getOneCustomer(cust.id)} color=\"primary\" aria-label=\"update customer\">\n                                            <Edit />\n                                    </IconButton>\n                                    <IconButton onClick={() => deleteHandler(cust.id)} color=\"secondary\" aria-label=\"delete customer\">\n                                        <Delete />\n                                    </IconButton>\n                                  </TableCell>\n                              </TableRow>\n                            ))}\n                              \n                            </>\n                        )}\n                        \n                    </TableBody>\n                </Table>  \n            </TableContainer>\n            <CustomerDialog\n                open={open} \n                close={handleClose}\n                formmode={formMode}\n                firstname={firstname}\n                lastname={lastname}\n                phonenumber={phonenumber}\n                email={email}\n                changeFirstname={handleFirstName}\n                changeLastname={handleLastName}\n                changephonenumber={handlePhoneNumber}\n                changeEmail={handleEmail}\n                addCustomer={addCustomerHandler}\n            />\n        </Container>\n    );\n}\n\n\nexport default Customer;"]},"metadata":{},"sourceType":"module"}