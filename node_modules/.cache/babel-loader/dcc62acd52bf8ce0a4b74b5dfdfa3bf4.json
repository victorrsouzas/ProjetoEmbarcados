{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/victorpc/\\xC1rea de trabalho/Desafio-HandTalk/src/auth/Cadastro.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, CssBaseline, Typography, Button, Grid, Link, makeStyles, Card, CardContent } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport fire from '../helpers/fbConfig';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Logo from '../asserts/icon.png';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    background: 'linear-gradient(45deg, white 10%, 30%, orange 90%)',\n    margin: theme.spacing(3, 0, 2),\n    color: '#fff'\n  },\n  card: {\n    marginTop: '60px',\n    paddingLeft: '20px',\n    paddingRight: '20px',\n    paddingBottom: '20px'\n  },\n  pointer: {\n    cursor: 'pointer',\n    color: 'red'\n  }\n}));\n\nconst SignUp = props => {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPassowerd = event => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleSignUp = () => {\n    fire.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      if (response) {\n        props.toggle();\n        toast.success('Usuario Cadastrado com Sucesso!!');\n      }\n    }).catch(error => {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          toast.error(error.message);\n          break;\n\n        case 'auth/invalid-email':\n          toast.error(error.message);\n          break;\n\n        case 'auth/weak-password':\n          toast.error(error.message);\n          break;\n      }\n    });\n  };\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\n      if (value !== password) {\n        return false;\n      }\n\n      return true;\n    });\n    return () => {\n      ValidatorForm.removeValidationRule('isPasswordMatch');\n    };\n  }, [password]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Cadastro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            onSubmit: handleSignUp,\n            className: classes.form,\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              fullWidth: true,\n              label: \"Email\",\n              onChange: handleEmail,\n              name: \"email\",\n              value: email,\n              validators: ['required', 'isEmail'],\n              errorMessages: ['Campo Obrigatorio', 'Email Invalido'],\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Password\",\n              onChange: handlePassword,\n              name: \"password\",\n              type: \"password\",\n              value: password,\n              validators: ['required'],\n              errorMessages: ['Campo Obrigatorio'],\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              label: \"Confirm password\",\n              fullWidth: true,\n              onChange: handleConfirmPassowerd,\n              name: \"confirmPassword\",\n              type: \"password\",\n              validators: ['isPasswordMatch', 'required'],\n              errorMessages: ['Senha incorreta', 'Campo Obrigatorio'],\n              value: confirmPassword,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              className: classes.submit,\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: props.toggle,\n                  className: classes.pointer,\n                  variant: \"body2\",\n                  children: \"Ja possui conta? Faça o login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"tsunUFiHVCGrv4TKDSSrz1JPWD0=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/victorpc/Área de trabalho/Desafio-HandTalk/src/auth/Cadastro.jsx"],"names":["React","useEffect","useState","Container","CssBaseline","Typography","Button","Grid","Link","makeStyles","Card","CardContent","ValidatorForm","TextValidator","fire","ToastContainer","toast","Logo","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","background","margin","color","card","paddingLeft","paddingRight","paddingBottom","pointer","cursor","SignUp","props","classes","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleEmail","event","target","value","handlePassword","handleConfirmPassowerd","handleSignUp","auth","createUserWithEmailAndPassword","then","response","toggle","success","catch","error","code","message","addValidationRule","removeValidationRule"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Container, CssBaseline, Typography, Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport fire from '../helpers/fbConfig';\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport Logo from '../asserts/icon.png';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n      submit: {\n          background: 'linear-gradient(45deg, white 10%, 30%, orange 90%)',\n          margin: theme.spacing(3, 0, 2),\n          color: '#fff'\n      },\n      card: {\n          marginTop: '60px',\n          paddingLeft: '20px',\n          paddingRight: '20px',\n          paddingBottom: '20px',\n      },\n      pointer: {\n          cursor: 'pointer',\n          color: 'red'\n      }\n}));\n\nconst SignUp = (props) => {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    \n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n    }\n    const handleConfirmPassowerd = (event) => {\n        setConfirmPassword(event.target.value);\n    }\n    const handleSignUp = () => {\n        fire.auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(response => {\n                if(response) {\n                    props.toggle();\n                    toast.success('Usuario Cadastrado com Sucesso!!');\n                }\n            }).catch((error) => {\n                switch (error.code) {\n                    case 'auth/email-already-in-use':\n                        toast.error(error.message);\n                        break;\n                    case 'auth/invalid-email': \n                        toast.error(error.message);                    \n                        break;\n                    case 'auth/weak-password':\n                        toast.error(error.message);\n                        break;\n                }\n            });\n    }\n\n    useEffect(() => {\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            if(value !== password) {\n                return false;\n            }\n            return true;\n        });\n        return () => {\n            ValidatorForm.removeValidationRule('isPasswordMatch');\n        }\n    }, [password])\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Card className={classes.card}>\n                <CardContent>\n                    <ToastContainer/>\n                    <CssBaseline/>\n                    <div className={classes.paper}>\n                        <img src={Logo} />\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Cadastro\n                        </Typography>\n                        <ValidatorForm \n                         onSubmit={handleSignUp}\n                         className={classes.form}>\n                        <TextValidator\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                label=\"Email\"\n                                onChange={handleEmail}\n                                name=\"email\"\n                                value={email}\n                                validators={['required', 'isEmail']}\n                                errorMessages={['Campo Obrigatorio', 'Email Invalido']}\n                                autoComplete='off'\n                            />\n                            <br/>\n                            <TextValidator\n                                variant=\"outlined\"\n                                fullWidth\n                                label=\"Password\"\n                                onChange={handlePassword}\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                validators={['required']}\n                                errorMessages={['Campo Obrigatorio']}\n                                autoComplete=\"off\"\n                            />\n                            <br/>\n                            <TextValidator\n                                variant=\"outlined\"\n                                label=\"Confirm password\"\n                                fullWidth\n                                onChange={handleConfirmPassowerd}\n                                name=\"confirmPassword\"\n                                type=\"password\"\n                                validators={['isPasswordMatch', 'required']}\n                                errorMessages={['Senha incorreta', 'Campo Obrigatorio']}\n                                value={confirmPassword}\n                                autoComplete=\"off\"\n                            />\n                             <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                className={classes.submit}\n                            >\n                                Cadastrar\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\n                                    {\"Ja possui conta? Faça o login\"}\n                                </Link>\n                                </Grid>\n                            </Grid>\n                        </ValidatorForm>\n                    </div>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}