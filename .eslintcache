[{"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\App.js":"1","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\helpers\\fbConfig.jsx":"2","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\auth\\Login.jsx":"3","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\pages\\index.jsx":"4","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\index.js":"5","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\view\\NavBar.jsx":"6"},{"size":1310,"mtime":1637189710010,"results":"7","hashOfConfig":"8"},{"size":602,"mtime":1637187820955,"results":"9","hashOfConfig":"8"},{"size":6081,"mtime":1637189751443,"results":"10","hashOfConfig":"8"},{"size":3435,"mtime":1637200535058,"results":"11","hashOfConfig":"8"},{"size":517,"mtime":1637099715887,"results":"12","hashOfConfig":"8"},{"size":2554,"mtime":1637099715887,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vbxu7e",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\App.js",["27","28"],"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\helpers\\fbConfig.jsx",[],"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\auth\\Login.jsx",["29","30","31","32","33"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container, CssBaseline, Typography, FormControlLabel, Button, Checkbox, Grid, Link, makeStyles, Card, CardContent\r\n} from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/fbConfig';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { ScaleLoader } from 'react-spinners';\r\nimport Logo from '../asserts/ban-i2.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(5),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        background: '#9999ff',\r\n        margin: theme.spacing(3, 0, 2),\r\n        color: '#fff'\r\n    },\r\n    card: {\r\n        marginTop: '60px',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px',\r\n        paddingBottom: '20px',\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer',\r\n        color: 'red'\r\n    }\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberme, setRememberMe] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const Update = () => {\r\n        fire.ref().update({\r\n            led: \"ON\",\r\n        }).catch(alert);\r\n    }\r\n\r\n    const override = `\r\n        display: flex;\r\n        margin-left: 150px;\r\n        border-color: #9999ff;\r\n    `;\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleCheck = (event) => {\r\n        setRememberMe(event.target.checked);\r\n    }\r\n    const handlerLogin = () => {\r\n        setLoading(true);\r\n        fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                const { user } = response;\r\n                const data = {\r\n                    userId: user.uid,\r\n                    email: user.email\r\n                }\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n                const storage = localStorage.getItem('user');\r\n                const loggedInUser = storage !== null ? JSON.parse(storage) : null;\r\n                props.loggedIn(loggedInUser);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                toast.error(error.message);\r\n                setLoading(false);\r\n            });\r\n        fire.ref().update({\r\n            Led: \"ON\",\r\n        }).catch(alert);\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <img src={Logo} />\r\n                        <br />\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Login\r\n                        </Typography>\r\n                        <ValidatorForm\r\n                            onSubmit={handlerLogin}\r\n                            onError={errors => {\r\n                                for (const err of errors) {\r\n                                    console.log(err.props.errorMessages[0])\r\n                                }\r\n                            }}\r\n                            className={classes.form}>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['Campo Obrigatorio', 'Email Invalido']}\r\n                                autoComplete='off' />\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['Campo Obrigatorio']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value={rememberme} onChange={(e) => handleCheck(e)} color=\"primary\" />}\r\n                                label=\"Lembrar-me\"\r\n                            />\r\n                            <br />\r\n                            {loading ? (\r\n                                <ScaleLoader\r\n                                    css={override}\r\n                                    size={150}\r\n                                    color={\"#9999ff\"}\r\n                                    loading={loading} />\r\n                            ) : (\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Entrar\r\n                                </Button>\r\n                            )}\r\n\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\pages\\index.jsx",["34","35","36","37","38"],"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\index.js",[],"C:\\Users\\victo\\Desktop\\ProjetoEmbarcados\\src\\view\\NavBar.jsx",["39"],{"ruleId":"40","severity":1,"message":"41","line":8,"column":8,"nodeType":"42","messageId":"43","endLine":8,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":19,"column":9,"nodeType":"42","messageId":"43","endLine":19,"endColumn":16},{"ruleId":"40","severity":1,"message":"45","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"46","line":3,"column":77,"nodeType":"42","messageId":"43","endLine":3,"endColumn":81},{"ruleId":"40","severity":1,"message":"47","line":3,"column":83,"nodeType":"42","messageId":"43","endLine":3,"endColumn":87},{"ruleId":"40","severity":1,"message":"48","line":47,"column":11,"nodeType":"42","messageId":"43","endLine":47,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":98,"column":25,"nodeType":"51","endLine":98,"endColumn":43},{"ruleId":"40","severity":1,"message":"52","line":3,"column":29,"nodeType":"42","messageId":"43","endLine":3,"endColumn":38},{"ruleId":"40","severity":1,"message":"53","line":5,"column":26,"nodeType":"42","messageId":"43","endLine":5,"endColumn":31},{"ruleId":"40","severity":1,"message":"54","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":12},{"ruleId":"40","severity":1,"message":"55","line":28,"column":12,"nodeType":"42","messageId":"43","endLine":28,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":78,"column":37,"nodeType":"58","endLine":78,"endColumn":52},{"ruleId":"40","severity":1,"message":"59","line":20,"column":18,"nodeType":"42","messageId":"43","endLine":20,"endColumn":25},"no-unused-vars","'fire' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'Update' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'toast' is defined but never used.","'Logo' is defined but never used.","'loading' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setAuth' is assigned a value but never used."]